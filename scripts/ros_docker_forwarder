#!/usr/bin/env python
import sys, os
import xmlrpclib
from SimpleXMLRPCServer import SimpleXMLRPCServer
from SimpleXMLRPCServer import SimpleXMLRPCRequestHandler

class FakeMaster:
    SUCCESS = 1

    def __init__(self, real_master_uri):
        # connect to the real ROS master
        self._real_master_proxy = xmlrpclib.ServerProxy(real_master_uri)

    def _dispatch(self, func_name, func_args):
        print ''
        print 'INPUT:', func_name, func_args

        # just forward this to the real ros master
        result = getattr(self._real_master_proxy, func_name)(*func_args)
        #print 'OUTPUT', result
        return result


fake_master_port = int(sys.argv[1])
real_master_uri = sys.argv[2]

server = SimpleXMLRPCServer(('localhost', fake_master_port), logRequests=False)
server.register_introspection_functions()
server.register_multicall_functions()
server.register_instance(FakeMaster(real_master_uri))
server.serve_forever()
